// https://oj.leetcode.com/problems/partition-list/

/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
class Solution {
public:
    ListNode *partition(ListNode *head, int x) {
        ListNode dummy(0);
        dummy.next = head;
        ListNode *now = head;
        ListNode *pos = &dummy; // the position where we add small element;
        while(now && now->val<x){ // find the location where NOW is >= x; pos stop here;
            now = now->next;
            pos = pos->next;
        }
        if (now == nullptr) return head;
        ListNode *pre_now = now; //pre_now is the point before now;
        now = now->next; 
        while(now){
            if (now->val<x){
                pre_now->next = now->next;
                now->next = pos->next;
                pos->next = now;
                pos = now;
                now = pre_now->next;
            }else{
                pre_now = now;
                now = now->next;
            }
        }
        return dummy.next;
    }
};
