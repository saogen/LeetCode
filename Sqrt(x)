class Solution {
public:
    int sqrt(int x) {
      
        // Newton's Method
        if (x==0) return 0;
        if (x==1) return 1;
        double x0 = 1;
        double x1;
        while(true){
            x1 = (x0+x/x0)/2;
            if (abs(x1-x0)<1)
                return x1;
            x0=x1;
        }
      
        // binary search approach 2
/*        long long high = x;
        long long low = 0;
        if (x<=0) {return 0;}
        if (x==1) {return 1;}
        while (high-low >1){
            long long mid = low + (high-low)/2;
            if (mid*mid<=x){low = mid;}
            else {high = mid;}
        }
        return low;
        */
    }
};
