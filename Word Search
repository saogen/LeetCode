class Solution {
private:
    vector<vector<bool>> visited;

public:
    bool search(int i, int j, int k, vector<vector<char> > &board, string word){
        if (k == word.size()) return true;
        if (i>=0 && i<board.size() && j>=0 && j<board[0].size() && !visited[i][j] && word[k] == board[i][j]){
            visited[i][j] = true;
            if (search(i-1,j,k+1,board,word)) return true;
            if (search(i,j+1,k+1,board,word)) return true;
            if (search(i+1,j,k+1,board,word)) return true;
            if (search(i,j-1,k+1,board,word)) return true;
            visited[i][j] = false;
        }
        return false;
    }
    
    bool exist(vector<vector<char> > &board, string word) {
        //unsigned long len = word.size();
        unsigned long row = board.size();
        unsigned long column = board[0].size();
        visited = vector<vector<bool>>(row,vector<bool>(column,false)); 
        for(int i=0; i<row; ++i){
            for(int j=0; j<column; ++j){
                if(search(i,j,0,board,word))
                    return true;
            }
        }
        return false;
    }
};
